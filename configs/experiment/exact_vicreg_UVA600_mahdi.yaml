# @package _global_

# to execute this experiment run:
# python train.py experiment=example

defaults:
  - override /trainer: exact_trainer.yaml
  - override /datamodule: exact_datamodule_UVA600.yaml
  - override /model: exact_ssl_module.yaml
  - override /callbacks: exact_callbacks_ssl.yaml
  - override /logger: wandb

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

# name of the run determines folder name in logs
name: "vicreg_UVA600_prstRgn_strd3"

seed: 12345

trainer:
  min_epochs: 200
  max_epochs: 200
  gradient_clip_val: null
  limit_train_batches: null
  limit_val_batches: null

datamodule:
  batch_size: 32
  num_workers: 4
  mode: "self-supervised"
  needle_region_only: False
  prostate_region_only: True
#  inv_cutoff: 0.4
  minimum_involvement: 0.4
  train_val_ratio: 0.25 # ratio of train to val dataset length
  resample_train_val_seed: 26 # random state for above random split
  patch_size_mm: [5, 5]
  patch_stride_mm: [3, 3]
  needle_region_intersection_threshold: 0.6
  prostate_region_intersection_threshold: 0.9

  use_augmentations: False
  aug_prob: 0.4 # probability of augmentations

model:
  lr: 0.0001
  backbone: resnet10
  # method specific parameters
  _target_: src.models.self_supervised.vicreg.vicreg_module.VICReg
  proj_output_dim: 512
  proj_hidden_dim: 512
  sim_loss_weight: 25.
  var_loss_weight: 25.
  cov_loss_weight: 1.

logger:
  wandb:
    name: ${name} #_srs${datamodule.resample_train_val_seed}_split${datamodule.train_val_ratio}
    tags: ["exact", "vicreg", "inPrst", "var_loss"]
    entity: mahdigilany
    project: template-tests

# comment all these when using needle region only
callbacks:
  model_checkpoint:
    monitor: "val/ssl/var_loss"
    mode: "min"

  early_stopping:
    monitor: "val/ssl/var_loss"
    mode: "min"
